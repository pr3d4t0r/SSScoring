.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ssscore" "1" "" "Version 2.8.5" "Speed Skydiving Scoring command line tool"
.SH Name
\f[B]sscore\f[R] \- Speed Skydiving Scoring tool for processing spped
dive FlySight files
.SH Synopsis
.IP
.EX
pip install \-U ssscoring
.EE
.PP
\f[CR]ssscore\f[R] will be located in either of these paths:
.IP \(bu 2
\f[CR]$VIRTUAL_ENV/bin/ssscore\f[R]
.IP \(bu 2
\f[CR]/usr/local/bin/ssscore\f[R]
.PP
Command after installation:
.IP
.EX
ssscore [\-e x.y] [\-t] datalake
.EE
.PP
Where: \- \f[CR]datalake\f[R] is a directory containing one or more
speed skydiving tracks, either in the topmost directory or nested.
\f[CR]ssscore\f[R] ignores all files present in the data lake that
aren\(cqt speed skydives, even if they are FlySight\-compatible CSV
files.
.IP \(bu 2
\f[CR]\-e\f[R] is drop zone elevation MSL in ft; defaults to 0.0;
\f[CR]x.y\f[R] is a floating point number.
.IP \(bu 2
\f[CR]\-t\f[R] if present, generates training output rounded values
without decimals.
Many speeders prefer to report 481 instead of 480.731 or 482 instead of
482.297 for training logs.
.PP
\f[I]Examples\f[R]:
.PP
Scores all of Joe\(cqs files in his speed skydiving directory, sets the
DZ elevation to 616 ft (Skydive Chicago), and wants training output with
rounded values (no decimals):
.IP
.EX
ssscore \-e 616 \-t /Users/joe/speed\-skydiving/tracks
.EE
.PP
Score all the files present in the FlySight device mounted at
\f[CR]/mnt\f[R]:
.IP
.EX
mount /dev/sda1 /mnt/FLYSIGHT1
ssscore /mnt/FLYSIGHT1
umount /mnt/FLYSIGHT1
.EE
.SH Description
\f[CR]ssscore\f[R] processes speed skydiving FlySight files in bulk.
Track files can be in versions 1 or 2, or even in SkyTrax format.
The program scores files according to the International Skydiving
Commission, the International Speed Skydiving Association, and the
United States Parachute Association scoring and competition rules.
.PP
\f[CR]ssscore\f[R] writes only to stdout.
It\(cqs output may be redicrected or piped as required.
.SH Arguments
\f[CR]datalake\f[R] is a directory containing one or more speed
skydiving tracks, either at the topmost level or nested.
\f[CR]ssscore\f[R] ignores all files present in the data lake that
aren\(cqt speed skydives, even if they are FlySight\-compatible CSV
files.
.PP
The man page or README.md file for the SSScoring API have a longer
description of what a data lake is and how \f[CR]ssscore\f[R] treats it.
.SH Options
\f[CR]\-e, \-\-elevation x.y\f[R] \- Drop zone elevation MSL; defaults
to 0.
.SH Files
\f[CR]/usr/local/bin/ssscore\f[R] if installed via \f[CR]pip\f[R] to the
derault Python run\-time \f[CR]$VIRTUAL_ENV/bin/ssscore\f[R] if
installed to an active virtual environment.
.SH Bugs and Notes
None.
.SH See Also
ssscoring(3)
.PP
Project: https://github.com/pr3d4t0r/SSScoring
.SH License
The \f[B]SSScoring\f[R] package, documentation and examples are licensed
under the \c
.UR https://github.com/pr3d4t0r/SSScoring/blob/master/LICENSE.txt
BSD\-3 open source license
.UE \c
\&.
